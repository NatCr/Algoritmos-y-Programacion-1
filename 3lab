#include <iostream>
#include <conio.h>
#define CAPMAX 25
using namespace std;

void cargar(int vec[], int n)
{  int i;
   for (i=0; i<n; i++)
      {cout<<"Valor para vec["<<i<<"] : ";
       cin>>vec[i];
      }
}

void mostrar(int vec[], int n)
{  int i;
   cout<<endl<<endl<<"El contenido del vector es --->> :\n";
   for (i=0;i<n;i++)
   {cout<<vec[i]<<" , ";}
}

int obtSumaDeTodoVector (int vec[], int n)
{int i,s=0;
for(i=0;i<n;i++)
{s=s+vec[i];}
return(s);
}

int obtSumaElemImparesVector (int vec[], int n)
{int i,s=0;
for(i=0;i<n;i++)
//con el if suma solamente los impares
{if(vec[i]%2!=0)
{s=s+vec[i];}
}
return(s);
}

bool VerifEsPrimo(int n)
{ bool k=true;
int i;
for(i=2;i<=n-1;i++)
{if(n%i==0)
{k=false;
i=n;}
}
return(k);
}

int obtSumaElemPrimosVector (int vec[], int n)
{int i,s=0;
for(i=0;i<n;i++)
{if(VerifEsPrimo(vec[i])==true)
   {s=s+vec[i];}
}
return(s);
}

void cargarPARES(int vec[], int n)
{  int i,p=0;
   for (i=0;i<n;i++)
   {p=p+2;
   vec[i]=p;}
}

void cargarIMPARES(int vec[], int n)
{  int i,p=1;
   for (i=1;i<n;i++)
   {p=p+2;
   vec[i]=p;}
}

void main()
{ int vect[CAPMAX],nroElem;
cout<<"Cuantos elementos para el vector?";
cin>>nroElem;
//cargar(vect,nroElem);
//cargarPARES(vect,nroElem);
cargarIMPARES(vect,nroElem);
//mostrar(vect,nroElem);
//cout<<"\n\nLa suma de todos los elementos es -->>: "<<obtSumaDeTodoVector(vect,nroElem);
//cout<<"\n\nLa suma de todos los elementos IMPARES es -->>: "<<obtSumaElemImparesVector(vect,nroElem);
//cout<<"\n\nLa suma de todos los elementos PRIMOS es -->>: "<<obtSumaElemPrimosVector (vect,nroElem);
//cout<<"\n\nEl vector con elementos PARES es -->>: ";
cout<<"\n\nEl vector con elementos IMPARES es -->>: ";
mostrar(vect,nroElem);
getch();
}

